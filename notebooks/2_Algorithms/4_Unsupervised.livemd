# Algorithms & Models

## Goal

This lesson will provide a brief introduction to some of the most common machine learning algorithms in order to understand why they are commonly used. We will also look at how the algorithms solve real-world problems.

## Overview

In the last section we learned that ML algorithms are basically procedures run on data, and they output models. We identified several well-known algorithms. Let's look at each of them a bit more closely to see how and why they are best put to use to solve particular problems.

## Unsupervised Machine Learning Algorithms

Unsupervised learning algorithms do not have a supervisor. Their input data is typically unlabeled. They guide themselves through the training and find patterns and insights.

Unsupervised learning can perform more advanced processing jobs compared to supervised learning, however the results can be more irregular.

<!-- livebook:{"break_markdown":true} -->

### Clustering

<!-- livebook:{"break_markdown":true} -->

#### K-Means

The K-Means algorithm finds similarities between objects and groups them into K different clusters. If K=3, there will be three clusters, and for K=4, there will be four clusters. It splits the given unlabeled dataset into K clusters. Each dataset belongs to only one group that has related properties. Here is a basic walk-through:

1. assign a number to K
2. select arbitrary K points (centroids)
3. assign all data points to the nearest centroid (these are the clusters)

Then,

1. calculate the variance
2. choose new centroid for each cluster based on the variance
3. repeat until no new centroids are needed

<!-- livebook:{"break_markdown":true} -->

![](images/k-means.png)

<!-- livebook:{"break_markdown":true} -->

The K-means algorithm comes with a few difficulties:

1. they often make clusters of a similar size
2. a human as to chose the value of K and getting the optimal number can be difficult

#### Uses

* clustering IT alerts
* optimizing delivery of goods
* document clustering
* image segmentation
* indentifying location of police activity
* call record detail analysis

<!-- livebook:{"break_markdown":true} -->

#### Hierarchical Clustering

Hierarchical clustering builds a tree of nested clusters without having to specify the number of clusters. Hierarchical clustering starts with k = N clusters. It then merges the two closest into one cluster, obtaining k = N-1 clusters. The process of merging two clusters to obtain k-1 clusters is repeated until the desired number of clusters K is reached. Euclidean distance is used to determine which clusters to merge. Hierarchical clustering is deterministic, which means it is reproducible..

Nodes are compared with one another based on their similarity. Larger groups are built by joining groups of nodes based on their similarity. A criterion is introduced to compare nodes based on their relationship.Distance scores are defined between every pair of points. The clustering algorithm proceeds by iteratively identifying subclusters. The procedure can be top down or bottom up.

#### Uses

* biological data analysis
* social network data

<!-- livebook:{"break_markdown":true} -->

### Time Series

In a time-series model in machine learning the independent variables are a successive length of time: i.e. minutes, days, years. Those independent variables influce the the predicted variable. These models are often used to predict time-bound events like weather prediction. Time series forecasting can help to understand how historical data impacts the future.

Time series forecasting models are typically made of these four compenents:

1. trend - the increase or decrease in the series of data over time
2. seasonality - fluctuations in the pattern due to seasonal determinants over time
3. cyclical variations - when data shows irregular rise and fall intervals.
4. random variations - instability due to random factors that do not repeat through the pattern

#### Uses

* forecasting 
  * the spread of COVID-19
  * the daily generation of wind power
  * an avalanche in a famous ski resort

<!-- livebook:{"break_markdown":true} -->

### Deep Learning

A class of ML models that imitate more closely human information processing. The word "deep" comes from how the model is made up of many layers of processing to extract features from the input. Each layer of processing passes on a more abstract representation of the data to the next layer. Unlike the other models we've discussed, deep learning models don't need the input data to be labeled. They handle unstructured data and can tackle more human-like problems such as facial recognition or natural language processing.

<!-- livebook:{"break_markdown":true} -->

#### Neural networks

Neural networks are a type of deep learning. They process training data by closely modeling the interconnections of the human brain through layers of nodes, thus neural. The nodes are made up of inputs, weights, a bias, and an output. If that output value exceeds the bias (threshold), it activates the node and passes the data to the next layer. Neural networks learn their mapping function through supervised learning, adjusting based on the loss function through the process of gradient descent. Th model accuracy increases as the loss function nears zero and the liklihood of a correct prediction increases.

In the next section we will go into a more detailed look of deep learning and neural networks, including uses.

<!-- livebook:{"break_markdown":true} -->

<hr style="background-color: #800080;height: 15.0px;" />

## Choosing the Right Model

The best suited model depends on the outcome you want. For example, to predict the gas mileage of a vehicle from historical data, a good choice would be a supervised learning model like linear regression. The desired outcome is to predict the relationship between variables to forecast on outcome. Remember, linear regression was define above as:

> best for finding out the relationship between variables and forecasting

To identify if a potential customer in a particular city with a particular income and commute is likely to purchase a particular vehicle, a decision tree might be a better choice because they are:

> like a flow chart where the class of an object is determined step-by-step using certain known conditions

<!-- livebook:{"break_markdown":true} -->

### Model Deployment

Once we have trained a model we need to make it available for use in testing or production environment. The model may be integrated with other applications.


TODO add next link